- name: Prepare ansible user on remote host
  hosts: debian
  vars:
    sudoers:
      - ansible
      - olli
      - samba
  vars_files:
    - secret
  tasks:
    - name: Create ansible user on remote host
      become: true
      user:
        name: ansible
        password: "{{ ansible_sudo_pass | password_hash('sha512') }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
    - name: Create samba user on remote host
      become: true
      user:
        name: samba
        password: "{{ samba_user_password | password_hash('sha512') }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
    - name: Make sure we have a 'wheel' group
      become: true
      group:
        name: wheel
        state: present
    - name: Allow 'wheel' group to have passwordless sudo
      become: true
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: visudo -cf %s
    - name: Add sudoers users to wheel group
      become: true
      user:
        name: "{{ item }}"
        groups: wheel
        append: yes
      with_items: "{{ sudoers }}"
    - name: Set authorized key taken from file
      become: true
      ansible.posix.authorized_key:
        user: "{{ item }}"
        state: present
        key: "{{ lookup('file', 'resources/id_rsa.pub') }}"
      with_items: "{{ sudoers }}"

- name: Prepare Debian packages
  remote_user: ansible
  hosts: debian
  vars_files:
    - secret
  tasks:
    - name: Ensure packages are installed and up to date
      become: true
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-compose
          - samba
          - wsdd
        state: latest

- name: Configure firewall
  remote_user: ansible
  hosts: debian
  tasks:
    - name: Allow samba
      become: true
      ansible.builtin.shell: ufw allow 3702/udp && ufw allow 5357/tcp && ufw allow 139/tcp && ufw allow 445/tcp && ufw allow 137/udp && ufw allow 138/udp
      notify: reload ufw
  handlers:
    - name: reload ufw
      become: true
      ansible.builtin.shell: ufw reload

- name: Configure samba
  remote_user: samba
  hosts: debian
  vars_files:
    - secret
  tasks:
    - name: Upload samba .conf-file
      become: true
      ansible.builtin.copy:
        src: resources/smb.conf
        dest: /etc/samba/smb.conf
        mode: '0644'
      notify: restart smbd
    - name: Create sambashare directory
      ansible.builtin.file:
        path: /home/samba/sambashare
        state: directory
      notify: restart smbd
    - name: Set samba password
      become: true
      ansible.builtin.shell: " printf '{{ samba_password }}\n{{ samba_password }}\n' | smbpasswd -a samba"
      notify: restart smbd
  handlers:
    - name: restart smbd
      become: true
      service:
        name=smbd
        state=restarted

- name: Configure wsdd
  remote_user: ansible
  hosts: debian
  vars_files:
    - secret
  tasks:
    - name: Update wsdd.list
      become: true
      ansible.builtin.shell: echo deb https://pkg.ltec.ch/public/ focal main > /etc/apt/sources.list.d/wsdd.list
    - name: Fetch gpg.key
      become: true
      ansible.builtin.shell: apt-key adv --fetch-keys https://pkg.ltec.ch/public/conf/ltec-ag.gpg.key

- name: Configure and start stashapp docker compose
  remote_user: ansible
  hosts: debian
  vars_files:
    - secret
  tasks:
    - name: Upload docker-compose.yml
      become: true
      ansible.builtin.copy:
        src: resources/stash-docker-compose.yml
        dest: /home/ansible/stash/docker-compose.yml
        mode: '0644'
    - name: Docker login
      become: true
      docker_login:
        username: ollisahlberg
        password: "{{ docker_password }}"
    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: /home/ansible/stash
        state: absent
    - name: Create and start services
      community.docker.docker_compose:
        project_src: /home/ansible/stash
      register: output

- name: Configure and start netdata docker compose
  remote_user: ansible
  hosts: debian
  vars_files:
    - secret
  tasks:
    - name: Upload docker-compose.yml
      become: true
      ansible.builtin.copy:
        src: resources/netdata-docker-compose.yml
        dest: /home/ansible/netdata/docker-compose.yml
        mode: '0644'
    - name: Docker login
      become: true
      docker_login:
        username: ollisahlberg
        password: "{{ docker_password }}"
    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: /home/ansible/netdata
        state: absent
    - name: Create and start services
      community.docker.docker_compose:
        project_src: /home/ansible/netdata
      register: output

- name: Configure and start nginx docker compose
  remote_user: ansible
  hosts: debian
  vars_files:
    - secret
  tasks:
    - name: Upload docker-compose.yml
      become: true
      ansible.builtin.copy:
        src: resources/nginx/*
        dest: /home/ansible/nginx/
        mode: '0644'
    - name: Docker login
      become: true
      docker_login:
        username: ollisahlberg
        password: "{{ docker_password }}"
    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: /home/ansible/nginx
        state: absent
    - name: Create and start services
      community.docker.docker_compose:
        project_src: /home/ansible/nginx
      register: output

- name: Configure and start development docker compose
  remote_user: ansible
  hosts: debian
  vars_files:
    - secret
  tasks:
    - name: Upload docker-compose.yml
      become: true
      ansible.builtin.copy:
        src: ../fso/osa3/puhelinluettelo/docker-compose.yml
        dest: /home/ansible/docker/docker-compose.yml
        mode: '0644'
    - name: Docker login
      become: true
      docker_login:
        username: ollisahlberg
        password: "{{ docker_password }}"
    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: /home/ansible/docker
        state: absent
    - name: Create and start services
      community.docker.docker_compose:
        project_src: /home/ansible/docker/
      register: output
